%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%D \module
%D   [     file=t-basicexam,
%D      version=2024-6-1,
%D        title=basicexam,
%D     subtitle=Memoir Ever,
%D       author=商无辛(Shueng Mosan),
%D         date=2024-6-1,
%D    copyright=商无辛(Shueng Mosan),
%D      license=,
%D          url=]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\startmodule[basicexam]
\unprotect
\setupmodule[mode=student]
\def\errorparameter#1{\begingroup
    \startalignment[center]
    \framed[align={center,lohi},width=max]{
    \switchtocolor[blue]\tta
    There is something Wrong happened at \color[red]{\underbar{parameter:#1}}.\\
    Please check your code.\\
    }\stopalignment
    \endgroup}
%%%% 2UP Printing %%%%%%%%
%%%% \setuppapersize[user pagesize][real pagesize,real orientation]
%%%% \setuparranging[page arrange method]
%%%% more info : https://wiki.contextgarden.net/Command/setuparranging
%%%%             https://wiki.contextgarden.net/Imposition
%%%%%%%%%%%%%%%%%%%%%%%%%%
%\setuppapersize[A4][A3,landscape]
%\setuparranging[2SIDE]%[2UP]
%\setuppagenumbering[alternative=singlesided]%{doublesided}]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%   EXAM MODULE   %%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 注意 ⚠️
%% 在定义命令时，参数后不可以直接断行，会导致参数查找失败。
%%（可能是因为 tex 认为参数后断行，则参数的结束分界符为断行，而非括号）
%% \def\foo#1{ .. some word ...}   \foo{..} 将正确运行
%% \def\foo#1
%%     { .. some word ...}         \foo{..} 将导致失败
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 注意 ⚠️
%% 在 lua 中使用 循环 等结构时，要注意 % 百分比符号的使用。不可以直接在关键字后
%% 使用。会导致运行出错：'do' expected near 'docontext' 等消息。
%% for i > 10 do % do 和 % 号之间有空格，  会正常运行
%% for i > 10 do%  do 和 % 号之间没有空格，会运行错误
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%\newcount\itindexn \itindexn=1
%%\def\itvariable{\ifcase\itindexn%
%%                       \or a\or b\or c\or d\or e%
%%                       \or f\or g\or h\or i\or j%
%%                       \or k\or l\or m\or n\or o%
%%                       \or p\or q\or r\or s\or t%
%%                       \or u\or v\or w\or x\or y\or z
%%                \fi}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\begingroup
%\catcode`\%=12\relax
%\gdef\percentchar{%}
%\endgroup
%\ctxlua{context(string.format("\percentchar8s",456))}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\defineconversion [hiragana]      [あ,い,う,え,お,か,き,く,け,こ,さ,し,す,せ,そ,
                                   た,ち,つ,て,と,な,に,ぬ,ね,の,は,ひ,ふ,へ,ほ,
                                   ま,み,む,め,も,や,ゆ,よ,ら,り,る,れ,ろ,わ,ん]
\defineconversion [katakana]      [ア,イ,ウ,エ,オ,カ,キ,ク,ケ,コ,サ,シ,ス,セ,ソ,
                                   タ,チ,ツ,テ,ト,ナ,ニ,ヌ,ネ,ノ,ハ,ヒ,フ,ヘ,ホ,
                                   マ,ミ,ム,メ,モ,ヤ,ユ,ヨ,ラ,リ,ル,レ,ロ,ワ,ン]
\defineconversion [hiragana-iroha][い,ろ,は,に,ほ,へ,と,ち,り,ぬ,る,を,わ,か,よ,
                                   た,れ,そ,つ,ね,な,ら,む,う,ゐ,の,お,く,や,ま,
                                   け,ふ,こ,え,て,あ,さ,き,ゆ,め,み,し,ゑ,ひ,も,
                                   せ,す,ん]
\defineconversion [katakana-iroha][イ,ロ,ハ,ニ,ホ,ヘ,ト,チ,リ,ヌ,ル,ヲ,ワ,カ,ヨ,
                                   タ,レ,ソ,ツ,ネ,ナ,ラ,ム,ウ,ヰ,ノ,オ,ク,ヤ,マ,
                                   ケ,フ,コ,エ,テ,ア,サ,キ,ユ,メ,ミ,シ,ヱ,ヒ,モ,
                                   セ,ス,ン]
%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% setupinfos 设置试卷抬头信息和格式
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% tu=chapter ego=section isea=subsection
\setuplabeltext [cn] [section={第,部分},subsection={第,节},]

\definehead [tu]   [chapter]       % you latin
\definehead [ego]  [section]       % me  latin
\definehead [isea] [subsection]    % he or she latin
\definehead [heu]  [subsubsection] % och
\setuphead  [tu]   [incrementnumber=yes,number=no,placehead=no,page=odd]
\setuphead  [ego]  [sectionsegments=section,numbercommand=]
\setupheads [isea] [numbercommand=]
\setupheads [tu,ego,isea]
                   [indentnext=yes,align=flushleft,
                   before={\blank[quarterline]},
                   after={\blank[quarterline]},
                   sectionconversionset=examnum]
\setuphead  [ego]   [style=\ssa]
\setuphead  [isea]  [style=\hwa]
\definestructureconversionset[examnum][chinesenumerals][chinesenumerals]
\definelist [tu]
\definecombinedlist [tocexam][tu][level=chapter]
\setupcombinedlist  [tocexam][list={tu},criterium=all]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\let\setuppapertitle\setgvariables
\def\definepapertitle[#1]{%
  \gdef\currentpapertitle{#1}%
  \setuppapertitle[\currentpapertitle][
                       n=5,              % 定义需要在试卷标题处需要显示多少元素，
                    typi=secret,         % 同时，自动定义相应数量的元素命令
                   typii=title,          % 使用typi typii typiii typiv ...
                  typiii=subject,        % 定义每个元素的名称，同时自动生成相关样式化命令
                   typiv=information,    % X Xstyle Xalign beforeX afterX vspacetypi
                    typv=notice,
             secretstyle=\ss,
              titlestyle=\ssa,
            subjectstyle=\ssb,
        informationstyle=\ttx,
             noticestyle=\rm\it,
             secretalign=flushleft,
              titlealign=center,
            subjectalign=center,
        informationalign=center,
             noticealign=flushleft,
                  secret={绝密 ★ 启用前},
                   title={\currentdate[year] 年普通高等学校招生全国统一考试},
                 subject={SubJect},
             information={总分:150 分，考试时间:120 分钟},
                  notice={注意事项：
                          \startitemize[n,packed,joinedup]
                            \item 答题前，务必将自己的姓名、准考证号填写在%
                                  答题卡规定的位置上。%
                            \item 答选择題时，必须使用 2B 铅笔将答题卡上对%
                                  应题目的答案标号涂黑。如需改动，用橡皮擦%
                                  擦干净后，再选涂其它答案标号。答非选择题%
                                  时，必须使用 0.5 毫米黑色签字笔，将答案%
                                  书写在答题卡规定的位置上。所有題目必须在答%
                                  题卡上作答，在试题卷上答题无效。 %
                            \item 考试结束后，将试题卷和答题卡一并交回。
                            \stopitemize},
]}

\def\doifemptyelsex#1#2{\doifelse{#1}{}{#2}{#1}}
\def\definevariable[#1][#2]{% #1=namespace #2=element name
    \doifelse{\getvariable{#1}{#2align}}{}
             {\setupalign[center]}
             {\setupalign[\getvariable{#1}{#2align}]}
    \vskip .1\baselineskip\relax
    \doifemptyelsex{\getvariable{#1}{before#2}}{}
    \doifemptyelsex{\getvariable{#1}{#2style}}{}
    \doifemptyelsex{\getvariable{#1}{#2}}
                   {\framed[color=red]
                   {\ss warning: #2 is empty ! please input #2.
                        or maybe you have some value is undefined
                        because n > 5.}}
    \doifemptyelsex{\getvariable{#1}{after#2}}{}
    \vskip .1\baselineskip\relax
}

\definedataset[papertitle]% use dataset can get tu defined after placetocexam
\def\currentpapertitletitle#1{
  \setdataset[papertitle][#1][title=\getvariable{#1}{title}]
  \tu{\datasetvariable{papertitle}{#1}{title}}
}

\def\makepapertitle[#1]{\begingroup%
  \setupindenting[no]%
  \vbox{\newcount\num_element \num_element=1%start vbox
  \doifnot{\getvariable{#1}{title}}{}%
    {\currentpapertitletitle{#1}}%
  \dorecurse{\getvariable{#1}{n}}%start recurse
    {\doifemptyelsex{\getvariable{#1}{vspacetyp\romannumeral\num_element}}{}
      {\definevariable[#1][\getvariable{#1}{typ\romannumeral\num_element}]}
  \advance\num_element by 1\relax}%stop recurse
  }%stop vbox
\endgroup}
%%%%%%%
\installnamespace          {question}
\installcommandhandler \????question  {question}  \????question
\installnamespace          {problem}
\installcommandhandler \????problem   {problem}   \????problem
\installnamespace          {choice}
\installcommandhandler \????choice    {choice}    \????choice
\installnamespace          {answer}
\installcommandhandler \????answer    {answer}    \????answer
\installnamespace          {pitem}
\installcommandhandler \????pitem     {pitem}     \????pitem
\installnamespace          {citem}
\installcommandhandler \????citem     {citem}     \????citem
\installnamespace          {fillin}
\installcommandhandler \????fillin    {fillin}    \????fillin
%%%%%%%%%%%%%%%%%%%%%%%%%
\newcount\currentmaterial
\installnamespace          {material}
\installcommandhandler \????material  {material}  \????material
\installcounterassociation {material}
\appendtoks
   \registermaterialcounter\currentmaterial
   \definecounter[\currentmaterial]%
\to \everydefinematerial
\appendtoks
   \synchronizematerialcounters
\to \everysetupmaterial
\definematerial [material]
\def\currentmaterial{material}
%%%%%%%%%%%%%%%%%%%%%%%%%
\newcount\currentindicator
\installnamespace          {indicator}
\installcommandhandler \????indicator {indicator} \????indicator
\installcounterassociation {indicator}
\appendtoks
   \registerindicatorcounter\currentindicator
   \definecounter[\currentindicator]%
\to \everydefineindicator
\appendtoks
   \synchronizeindicatorcounters
\to \everysetupindicator
\defineindicator[indicator]
\def\currentindicator{indicator}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newif\ifmode_quickcheck  \mode_quickcheckfalse
\newif\ifmode_check       \mode_checkfalse
\newif\ifmode_showanswer  \mode_showanswerfalse
\newif\ifmode_showpoint   \mode_showpointfalse
\newif\ifenv_question     \env_questionfalse
\newif\ifenv_problem      \env_problemfalse
\newif\ifenv_choice       \env_choicefalse
\newif\ifenv_material     \env_materialfalse
\newif\ifenv_close        \env_closefalse
\newif\ifenv_answer       \env_answerfalse
\newif\ifitem_choice      \item_choicefalse
\newif\ifitem_pitem       \item_pitemfalse
\newif\ifenv_toplevel     \env_topleveltrue
\newif\ifenv_botlevel     \env_botlevelfalse
\newif\ifchoice_check     \choice_checkfalse
\newif\ifreset_counter
%\ifconditional\c_strc_itemgroups_horizontal
% if horizontal is setted ,mode on

\newdimen\width_cit
\newdimen\width_cit_max
\newdimen\choice_max_compared_width%
\newcount\totalchoicenumber%
\newcount\currentchoicenumber%
\newcount\totalpitemnumber%
\newcount\currentpitemnumber%
\newcount\cnt_step_point% for point calculate
\newcount\cnt_step_point_temp%

\definecounter[Unicode]      [way=bychapter]
\definecounter[Unicode_toplevel]% for level 1 : question or problem
\definecounter[Unicode_midlevel]% for level 2 : problem or level 1
\definecounter[Unicode_botlevel]% for level 3 : only for level 2
\def\QusetionID{\namedheadnumber{chapter}-\rawcountervalue[Unicode]}
\def\increaseQusetionID{\incrementcounter[Unicode]}
\def\decreaseQusetionID{\decrementcounter[Unicode]}

\definedataset[Answer_collector]
\definedataset[Problem_collector]
\definedataset[Choice_collector]
\definecounter[totalchoicenumber]       % get total number of choice
\definecounter[currentchoicenumber]     % get order number of choice

\defineitemgroup   [env_problem]  % for choices : ABCD
\setupitemgroup    [env_problem]  [each] [n,packed,joinedup,nowhite]
\defineitemgroup   [env_question] % for choices : ABCD
\setupitemgroup    [env_question] [each] [n,packed,joinedup,nowhite,continue]
\defineitemgroup   [env_choice]   % for choices : ABCD
\setupitemgroup    [env_choice]   [each] [A,packed,joinedup,nowhite]
\definedescription [env_answer_descr]
\definetextbackground[env_answer]
\definebar         [fillin_text]
\defineoverlay     [normalframeOL]
                   [\useMPgraphic{normalframeMP}]
\startuseMPgraphic{normalframeMP}
  draw unitsquare xyscaled (\overlaywidth, \overlayheight)
\stopuseMPgraphic
\startuseMPgraphic{rules:under:wave}
    vardef lsin primary x =
        lua("mp.print(math.sin(" & decimal x & "))")
    enddef ;
    draw function(1, "x", "lsin(1.2*x)", 0, RuleWidth, .1pt)
        shifted (0,RuleFactor*RuleOffset+RuleDepth)
        withpen pencircle scaled RuleThickness
        withcolor RuleColor ;
    setbounds currentpicture to unitsquare xysized(RuleWidth,RuleHeight) ;
\stopuseMPgraphic
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\choice_availablecolumns{\datasetvariable{Choice_collector}{\QusetionID}{availablecolumns}}
\def\choice_itemmaxwidth{\datasetvariable{Choice_collector}{\QusetionID}{itemmaxwidth}}
\def\choice_totalchoicenumber{\datasetvariable{Choice_collector}{\QusetionID}{totalchoicenumber}}
\def\choice_answer{\datasetvariable{Choice_collector}{\QusetionID}{answer}}
\def\choice_answerstatus{\datasetvariable{Choice_collector}{\QusetionID}{answerstatus}}
\def\answer_id{\datasetvariable{Answer_collector}{\QusetionID}{id}}
\def\answer_envid{\datasetvariable{Answer_collector}{\QusetionID}{envid}}
\def\answer_order{\datasetvariable{Answer_collector}{\QusetionID}{order}}
\def\answer_userorder{\datasetvariable{Answer_collector}{\QusetionID}{userorder}}
\def\answer_answer{\datasetvariable{Answer_collector}{\QusetionID}{answer}}
\def\answer_point{\datasetvariable{Answer_collector}{\QusetionID}{point}}
\def\answer_totalnumber{\datasetvariable{Answer_collector}{\QusetionID}{totalnumber}}

\def\show_check_info{\par\framed[width=\textwidth,align=flushleft]%
                     {\answer_id\ ** \answer_envid\ ** \answer_order\ ** \answer_userorder}\par}

\def\show_check_infos{\par\leftskip 0pt\relax\noindent%
  \framed[align=flushleft]{\language[en]%
    \hfil {\bf NOTICE: MODE CHECK IS ON}          \hfil\par
    \hfil currentitemgroup:{\bf\currentitemgroup} \hfil\par
    \hfil Notice,{\bf Cinfos} only show choice env information \hfil\par
    \starttabulate[|rp(.2\textwidth)|lp(.25\textwidth)|rp(.2\textwidth)|lp(.25\textwidth)|lwlB|]
      \NC {\bf Name} \NC {\bf Content}           \NC     {\bf Cinfos}  \NC {\bf Content}  \NC\NR\HL
            \NC CUparen    \NC \currentparentitemgroup \NC     CUCmaxwidth   \NC \choice_itemmaxwidth       \NC\NR
            \NC CUitemlevel\NC \currentitemlevel       \NC                   \NC                            \NC\NR
            \NC CUorder    \NC \currentorder           \NC     totalCnumber  \NC \choice_totalchoicenumber  \NC\NR
            \NC CUuserorder\NC  Cur=\currentitemnumber \NC     Cavailable    \NC \choice_availablecolumns   \NC\NR
            \NC level.check\NC \level_status           \NC     Canswer       \NC \choice_answer             \NC\NR
            \NC answer     \NC \answer_answer          \NC     Canswerstatus \NC \choice_answerstatus       \NC\NR
        \stoptabulate}
    \par}

\def\dimtonum #1{\number\numexpr \dimexpr #1\relax*635/65536\relax }
\newcount\cnt_floor
\def\floor#1{\floorhelper#1.\relax}
\def\floorhelper#1.#2\relax{\ifx\relax#2\relax#1%
    \else\if.#2#1\else\floorhelphelper{#1}#2\fi\fi}
\def\floorhelphelper#1#2.{\ifnum#2>0%
    \floorhelphelphelper#1\relax\relax\relax\else#1\fi}
\def\floorhelphelphelper#1#2\relax{%
  \if-#1\relax-\cnt_floor=0#2\relax%
  \advance\cnt_floor by 1\relax%
  \number\cnt_floor\relax%
  \else\cnt_floor=0#1#2\relax%
  \number\cnt_floor\relax\fi%
}
\directlua{MultiAnswerCollector = {}}
\def\collect#1{%if want show collect,show #1
    \directlua{table.insert(MultiAnswerCollector, [[#1]])}}
\def\callcollection{\directlua{
    tex.sprint(table.concat(MultiAnswerCollector, " "))
    MultiAnswerCollector = {}
}}

\def\current_env_check{% can get \current_env_item
  \ifenv_question  \def\current_env_item{question}\fi
    \ifenv_problem   \def\current_env_item{problem}\fi
    \ifenv_choice    \def\current_env_item{choice}\fi
    \ifenv_material  \def\current_env_item{material}\fi
    \ifenv_close     \def\current_env_item{close}\fi
    \ifenv_answer    \def\current_env_item{answer}\fi
    \ifitem_choice   \def\current_env_item{choice}\fi
    \ifitem_pitem    \def\current_env_item{pitem}\fi
}

\def\level_status{\ifenv_toplevel <env_toplevel> \else <toplevelfalse>\fi%
                  \ifenv_botlevel <env_botlevel> \else <botlevelfalse>\fi}

\def\currentorder{% get unique order
    \rawcountervalue[Unicode_toplevel]%-\rawcountervalue[Unicode_midlevel]%
    \ifnum\rawcountervalue[Unicode_botlevel]=0\relax\else%
    (\rawcountervalue[Unicode_botlevel])\fi%
}

\def\set_currentuserorder[#1]{% get order that user setted
    \expandafter\newcount\csname #1order\endcsname%
    \ifnum\currentitemnumber=0%
    \csname #1order\endcsname=\rawcountervalue[Unicode_toplevel]\relax%
    \else%
    \csname #1order\endcsname=\currentitemnumber\relax%
    \fi%
}

%%% this command can quickly get userorder
\def\currentuserorder#1{\number\csname #1order\endcsname}

\def\set_count_envlevel[#1][#2]{%
   \setcounter[Unicode_midlevel][0]
   \setcounter[Unicode_botlevel][0]
   \doifincsnameelse{#1}{\currentitemgroup}
                    {\env_topleveltrue{}}
                    {\env_toplevelfalse{}}%
   \ifenv_toplevel\incrementcounter[Unicode_toplevel]%
             \else\incrementcounter[Unicode_midlevel]\fi%
   \set_currentuserorder[#2]%
   \xdef\currentfullnumber{\currentorder}
   \xdef\currentusernumber{\currentuserorder{#2}}
   \ifmode_quickcheck\show_check_info\else%
       \ifmode_check\show_check_infos\else\fi%
   \fi%
}

\def\set_count_itemlevel[#1][#2]{%
    \doifincsnameelse{#1}{\currentitemgroup}%
                     {\env_botleveltrue{}}%
                     {\env_botlevelfalse{}}%
   \ifenv_botlevel\incrementcounter[Unicode_botlevel]%
             \else\incrementcounter[Unicode_midlevel]\fi%
   \set_currentuserorder[#2]%
   \xdef\currentfullnumber{\currentorder}
   \xdef\currentusernumber{\currentuserorder{#2}}
   \ifmode_quickcheck\show_check_info\else%
        \ifmode_check\show_check_infos\else\fi%
   \fi%
}

%%% id        由 章節號 + 題號 組成，題號在每一章節中重新從 1 計數
%%% envid     當前列表名稱和層數
%%% order     當前子題號，例如 第一題 ： 1 第六題第三小題 ： 6(3)
%%% userorder 當前列表序號(可獲取被start更改後的序號)

\def\dataset_collector[#1][#2]{%#1 where answer from %% #2 user id for the env
  \def\currentenvironment{\current_env_item}
    \setdataset [Answer_collector][\QusetionID]%收集答案並在未來展開
                [id={\QusetionID},%
                 envid={\currentitemgroup},%
                 order={\number\currentorder},%
                 userorder={\currentuserorder{#2}},%
                 answer={\pass_parameter_answer},
                 point={\csname #1parameter\endcsname{point}},
                 totalnumber={\the\totalpitemnumber},]}

\def\pass_parameter_answer{%
  \ifenv_choice\get_choice_answer\else%
  \check_env_answer[pitem]\fi}

\def\check_env_answer[#1]{
  \doifelsesomething{\csname #1parameter\endcsname{answer}}{}{%
       There is no \color[red]{\tta #1 answer} value.
     }{\csname #1parameter\endcsname{answer}}%
}

\def\get_choice_answer_num#1{%
    \doifsomethingelse%
    {\datasetvariable{Choice_collector}{#1}{answer}}%
    {\datasetvariable{Choice_collector}{#1}{answer}}%
    {There is no \color[red]{\tta Choice answer} value.}}
\def\get_choice_answer{\increaseQusetionID%
  \get_choice_answer_num{\QusetionID}
  \decrementcounter[Unicode]}
\def\get_fillin_answer{%
  \datasetvariable{Fillin_collector}{\QusetionID}{answer}%
}

\def\get_pitem_point{%
  \def\ProblemID{\namedheadnumber{chapter}-\nextcountervalue[Unicode_toplevel]}%
  \datasetvariable{Problem_collector}{\ProblemID}{totalpitempoint}}

\let\getanswerfromchoice\get_choice_answer
\let\getanswerfromfillin\get_fillin_answer
\let\getpointfrompitem\get_pitem_point
\let\getpointfromproblem\get_pitem_point

%%%%% NOTICE : 目前，當用戶主動輸入值和選項值發生衝突時，並未設置警告信息!!!!
\def\getanswerforanswer{% used for answer env to auto get answer
  \datasetvariable{Answer_collector}{\QusetionID}{answer}}
\def\getpointforanswer{% used for answer env to auto get answer
  \datasetvariable{Answer_collector}{\QusetionID}{point}}

\def\check_choice_answerstatus{
    \ifchoice_check checked!%
    \else%
      \color[red]{unchecked!}\\
      The current answer is auto-generated, \\
      please set the answer manually. \\
      The concise way to do this is to \\
      add \[*\] parameter to {\tt citem} command.\\
  \fi}

\def\show_point_or_answer[#1][#2]{\begingroup%#1 parameter %#2 modename
  \processaction[\csname #1parameter\endcsname{show#2}][%
                 true=>\csname mode_show#2true\endcsname,%
                 false=>\csname mode_show#2false\endcsname,]%
  \doifelse{\csname #1parameter\endcsname{show#2}}{true}
            {\csname mode_show#2true\endcsname%
                  \csname #1parameter\endcsname{#2style}%
                  \switchtocolor[\csname #1parameter\endcsname{#2color}]%
                   \paren{\csname #1parameter\endcsname{#2}\ %
                            \csname #1parameter\endcsname{#2label}}%
        }{\csname mode_show#2false\endcsname}%
  \endgroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\inherit_itemgroup_option[#1]{
              \setupcounter[itemgroup:env_#1]
                 [way=\csname #1parameter\endcsname{way}]
                \setupitemgroup[env_#1]%[packed,joinedup,nowhite]
                   [ left=\csname #1parameter\endcsname{left},
                    right=\csname #1parameter\endcsname{right},
                  stopper=\csname #1parameter\endcsname{stopper},
                 distance=\csname #1parameter\endcsname{distance},
                   before=\csname #1parameter\endcsname{before},
                    after=\csname #1parameter\endcsname{after},
                    width=\csname #1parameter\endcsname{width},
                    align=\csname #1parameter\endcsname{align},
                indenting=\csname #1parameter\endcsname{indenting},
                 symalign=\csname #1parameter\endcsname{symalign},
                   symbol=\csname #1parameter\endcsname{symbol},
                itemalign=\csname #1parameter\endcsname{itemalign},
                   option=\csname #1parameter\endcsname{option},
                    style=\csname #1parameter\endcsname{style},
                    color=\csname #1parameter\endcsname{color},
         numberconversion=\csname #1parameter\endcsname\c!numberconversion
                      ]%
}
\def\inherit_itemgroup_option_s[#1]{
    \setupitemgroup[env_#1]
                   [start=\csname #1parameter\endcsname{start},]
}
\setupproblem  [      left={},  %%%%% follow is itemize option
                     right={},
                   stopper={.~},
                  distance=.5em,
                    before=,
                     after=,
                     width=.5em,
                     align=,
                 indenting=no,
                  symalign=,
                    symbol=,
                 itemalign=,
                    option={packed,joinedup,nowhite},
                       way=bysection,
          numberconversion=n,]
\inherit_itemgroup_option[problem]
%\inherit_itemgroup_option_s[problem]

\def\startproblem{\dosingleempty\startproblem_indeed}
\def\startproblem_indeed[#1]{\begingroup%
  \env_problemtrue\current_env_check%
  \iffirstargument\setupproblem[#1]\fi%
  \startitemgroup[env_problem]%
                   [\problemparameter{numberconversion},#1]%
                   [#1]%
%   \show_point_or_answer[problem][point]% no need to show this
%   \show_point_or_answer[problem][answer]%
  \currentpitemnumber=0\relax%
  \cnt_step_point=0\relax%
  \cnt_step_point_temp=0\relax%
  \set_count_envlevel[env_problem:1][problem]}

\def\stopproblem{%\dataset_collector[pitem][problem]% should be deleted maybe?
    \ifnum \totalpitemnumber > \currentpitemnumber%
           \totalpitemnumber = \totalpitemnumber%
    \else  \totalpitemnumber = \numexpr\currentpitemnumber-1\relax%
    \fi%遞歸出總序號
    \setdataset [Problem_collector]%
    [\namedheadnumber{chapter}-\rawcountervalue[Unicode_toplevel]]%收集答案並在未來展開
                [totalpitemnumber={\the\totalpitemnumber},
                 totalpitempoint={\number\cnt_step_point},]%
  \stopitemgroup\endgroup}

\setupquestion [showpoint=false,
                    point=,
               pointstyle=\ttx,
               pointcolor=,
               pointlabel={分},
                    answer=,
               answerstyle=\ss,
               answercolor=red,
                      left={},  %%%%% follow is itemize option
                     right={},
                   stopper={.~},
                  distance=0em,
                  option={packed,joinedup,nowhite},
                    before=,
                     after=,
                     width=1.5em,
                     align=,
                 indenting=no,
                  symalign=,
                    symbol=,
                 itemalign=,
                       way=bychapter,%wont work if continue on
          numberconversion=n,]
\inherit_itemgroup_option[question]
%\inherit_itemgroup_option_s[question]

\def\startquestion{\dosingleempty\startquestion_indeed}
\def\startquestion_indeed[#1]{\begingroup%
    \env_questiontrue\current_env_check%
    \iffirstargument\setupquestion[#1]\fi%
    \ifempty{\questionparameter{start}}% 避免 continue 和 start 属性冲突
    \startitemgroup[env_question]%
                  [\questionparameter{numberconversion},continue,#1]%
                  [#1]%
  \else\startitemgroup[env_question]%
                  [\questionparameter{numberconversion},#1]%
                  [#1]%
   \fi\item[\questionparameter\c!reference]%
   \show_point_or_answer[question][point]%
   \show_point_or_answer[question][answer]%
   \set_count_envlevel[env_question:1][question]%
   \unskip}

\def\stopquestion{%\dataset_collector[question][question]%
  \stopitemgroup\endgroup}


% maxiwidth key is for calcaluted max width of choice and waited to be compare，
% notice this key is maxiwidth ,and difference from maxwidth which
%        for setupitemgroup command
\setupchoice       [showpoint=true,
                    point=4,
               pointstyle=,
               pointcolor=,
               pointlabel={分},
                    answer=\get_choice_answer,
               answerstyle=\ss\tf,
               answercolor=red,
                      left={},  %%%%% follow is itemize option
                     right={},
                   stopper={.~},
                  distance=.5em,
                    option={packed,joinedup,nowhite},
                    before=,
                     after=,
                     width=1em,
                  maxiwidth=.8\textwidth,
                     start=1,
                     align=,
                 indenting=no,
                  symalign=,
                    symbol=,
                 itemalign=,
                       way=bysection,
          numberconversion=A,]
\inherit_itemgroup_option[choice]
\def\startchoice{\dosingleempty\startchoice_indeed}
\def\startchoice_indeed[#1]{\begingroup%
    \env_choicetrue\current_env_check%
    \increaseQusetionID%
    \doifelsesomething{\datasetvariable{Choice_collector}%
                    {\QusetionID}{totalchoicenumber}}% arg_1
       {\scratchcounter\datasetvariable{Choice_collector}%
                      {\QusetionID}{totalchoicenumber}}% arg_2
                      {\scratchcounter\zerocount}% arg_3
    \newcount\current_total_choice_number% 當前選項 ABCD 總計數
    \current_total_choice_number=\number\scratchcounter\relax%
    \doifelsesomething{\datasetvariable{Choice_collector}
                      {\QusetionID}{availablecolumns}}%
       {\scratchcounter\datasetvariable{Choice_collector}
                      {\QusetionID}{availablecolumns}}%
                      {\scratchcounter\zerocount}%
    \newcount\current_available_columns%可排版的最多列數
    \current_available_columns=\number\scratchcounter\relax%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    % if calc_horizontal_num >= tbl_cit_count
%    %                                      set horizontal = tbl_cit_count
%    % if calc_horizontal_num <  tbl_cit_count and tbl_cit_count ~= 1
%    %                                  set horizontal = two % calc_horizontal_num
%    % if calc_horizontal_num <  tbl_cit_count and tbl_cit_count == 1
%    %                                      set horizontal = 1
%    % 特别的， 3 选项 且 可排版最大列数为 2 时，排版 1 行
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \startluacode
    tbl_num_temp = {"one","two","three","four",
                    "five","six","senven","eight","nine"}
    local   tbl_cit_count         = tex.count['current_total_choice_number']
    local   available_columns     = tex.count['current_available_columns']
            available_columns_arg = ""
    if     (tbl_cit_count == 3) and (available_columns   <  tbl_cit_count)
    then    available_columns_arg = "one"
    elseif (tbl_cit_count >  1) and (available_columns   >= tbl_cit_count)
    then    available_columns_arg = "horizontal," .. tbl_num_temp[tbl_cit_count]
    elseif (tbl_cit_count >= 1) and (available_columns   <=           1 )
    then    available_columns_arg = "one"
    else    available_columns_arg = "horizontal,two"
    end
    \stopluacode
  \iffirstargument\setupchoice[#1]\fi%
    \startitemgroup[env_choice]%
                   [\choiceparameter{numberconversion},#1,%
                    \ctxlua{context(available_columns_arg,"")},]%
                   [#1]%
    \totalchoicenumber=0\relax%
    \currentchoicenumber=0\relax%
    \setcounter   [totalchoicenumber]   [0]% recalculator when startitemgroup
    \setcounter   [currentchoicenumber] [0]% recalculator when startitemgroup
    \set_count_envlevel[env_choice:1][choice]}

\def\stopchoice{%
    \newdimen\width_max_with_label%
    \width_max_with_label = \dimexpr\width_cit_max + %
                            \d_strc_itemgroups_list_width\relax%
    \currentchoicenumber=\numexpr\currentchoicenumber-1\relax%
    \ifnum \totalchoicenumber > \currentchoicenumber%
           \totalchoicenumber = \totalchoicenumber%
    \else  \totalchoicenumber = \currentchoicenumber%
    \fi%遞歸出總序號
    \restorecounter[currentchoicenumber]%恢復答案所在序號
  \choice_max_compared_width=\choiceparameter{maxiwidth}\relax%
    \newcount\tempa       \tempa      =\dimtonum{\choice_max_compared_width}\relax%
    \newcount\tempb       \tempb      =\dimtonum{\the\width_max_with_label}\relax%
    \setdataset [Choice_collector][\QusetionID][%收集選項信息
                 availablecolumns={\number\numexpr \tempa / \tempb\relax},
                 itemmaxwidth={\the\width_cit_max},
                 totalchoicenumber={\number\totalchoicenumber},
                 answerstatus={\check_choice_answerstatus},
                 answer={\callcollection},]%
    \stopitemgroup\endgroup}

%%%%%%%
\setupdescription   [env_answer_descr]
                    [align=width, width=fit,
                     before=,after=,]
\setuptextbackground[env_answer]
                    [location=paragraph,width=local,
                     leftoffset=1ex,rightoffset=1ex,
                     %topoffset=.5ex,bottomoffset=.5ex,
                     before={\leftskip=0pt\startnarrower
                            \blank[force,halfline]},
                     after={\blank[halfline]\stopnarrower},
                     background=\answerparameter\c!background,
                     backgroundcolor=\answerparameter\c!backgroundcolor,
                     corner=\answerparameter\c!corner,
                     frame=\answerparameter\c!frame,
                     framecolor=\answerparameter\c!framecolor,
                     rulethickness=\answerparameter\c!rulethickness,
                     ]


\newdimen\label_width\label_width=2em\relax
\setupanswer[
             background=normalframeOL,
             backgroundcolor=,
             corner=,
             frame=,
             framecolor=,
             rulethickness=,
             showanswer=true,
             showpoint=true,
             answer=\getanswerforanswer,
             point=\getpointforanswer,
             pointlabel={分},
             pointstyle=\answerparameter{style},
             pointcolor=\answerparameter{color},
             answerstyle=\answerparameter{style},
             answercolor=\answerparameter{color},
             distance=-\label_width,
             style=\ss,
             labelstyle=\bi,
             label={答案 : },
             before=,
             after=,
             draftheight=5em,
             draftcontent={},
             draftbefore={},
             draftafter={},
             indenting={first,always,2em},
             afteranswer={\par\indentation},]
\def\startanswer   {\dosingleempty\dostartanswer}
\def\dostartanswer[#1]#2\stopanswer{\begingroup%
    \env_answertrue\current_env_check%
    \iffirstargument\setupanswer[#1]\fi%
    \answerparameter{before}%
  \ifmode_showanswer%
    \setwidthof{\answerparameter{labelstyle}%
                    \answerparameter{label}}\to\label_width
        \setupdescription [env_answer_descr][
            distance=\answerparameter\c!distance,
         closesymbol=\answerparameter\c!closesymbol,
        closecommand=\answerparameter\c!closecommand,]
      \startenv_answer%
        \startenv_answer_descr{%
            \answerparameter{labelstyle}%
            \answerparameter{label}}
        \hskip\label_width\relax
          \show_point_or_answer[answer][point]%
          \show_point_or_answer[answer][answer]%
          \answerparameter{afteranswer}%
          \useanswerstyleandcolor\c!style\c!color%
          \setupindenting[\answerparameter\c!indenting] #2
        \stopenv_answer_descr%
      \stopenv_answer%
  \else
    \startenv_answer%
      \answerparameter{draftbefore}%
      \mbox{}\vbox to \answerparameter{draftheight}{\answerparameter{draftcontent}}\relax%
      \answerparameter{draftafter}%
    \stopenv_answer%
  \fi%
  \answerparameter{after}%
    \endgroup}

\setuppitem    [showpoint=false,
                    point=0,% 必須有預設值，否則出現計數器錯誤(missing number)
               pointstyle=\ttx,
               pointcolor=,
               pointlabel={分},
               showanswer=false,
                    answer=,
               answerstyle=\ss,
               answercolor=red,]
\def\startpitem{\dosingleempty\startpitem_indeed}
\def\startpitem_indeed[#1]{\begingroup%
    \item_pitemtrue\current_env_check%
    \increaseQusetionID%
  \iffirstargument\setuppitem[#1]\fi%
    \startitem[\pitemparameter{reference}]%%
      \ifnum\currentpitemnumber=0\currentpitemnumber=1\relax%
    \else\relax\fi%
        \show_point_or_answer[pitem][point]%
        \show_point_or_answer[pitem][answer]%
    \set_count_itemlevel[env_problem:2][pitem]%
    \global\cnt_step_point_temp=\pitemparameter{point}\relax%
    \ifnum\cnt_step_point=0%
    \global\cnt_step_point=\cnt_step_point_temp\relax%
  \else%
    \global\cnt_step_point=\numexpr\cnt_step_point+\cnt_step_point_temp\relax%
  \fi
}

\def\stoppitem{%
  \dataset_collector[pitem][pitem]%
  \stopitem\global\advance\currentpitemnumber by 1\relax\endgroup}

\def\correct_choice#1#2{%
    \doif{#1}{*}{%
  {\doifelse{\choiceparameter{answerstyle}}{}%
  {\choiceparameter{answerstyle}}%
    {\questionparameter{answerstyle}}%
    \doifelse{\choiceparameter{answercolor}}{}%
    {\switchtocolor[\choiceparameter{answercolor}]}%
    {\switchtocolor[\questionparameter{answercolor}]}%
    #2}}}
\def\get_citem_text[#1]{\setbox0=\hbox{#1}%
    \width_cit = \the\wd0\relax%relax is neccessary
    \ifdim \width_cit_max > \width_cit%
           \width_cit_max = \width_cit_max%
    \else  \width_cit_max = \width_cit%
    \fi}%%%% 遞歸計算出最大寬度

\def\startcitem{\dodoubleempty\startcitem_indeed}
\def\startcitem_indeed[#1][#2]#3\stopcitem{% #1 correct answer
    \ifsecondargument\setupcitem[#2]\fi%     #2 options
    \get_citem_text[#3]%                     #3 choice content
%    \set_count_itemlevel[env_choice:2][citem]
%    没有必要计算子选项的 id，choice 环境的 id 就已经足够了。
%    同时也已经有 totalchoicenumber 来获取子选项的数量了。
    \doif{#1}{*}{\choice_checktrue}%
    \ifconditional\c_strc_itemgroups_horizontal% mode_horizontal
       \ifnum\currentchoicenumber<1%
       \currentchoicenumber = 1\relax%
       \else\relax\fi%
       \setcounter[currentchoicenumber][\currentchoicenumber]%
       \setcounter[totalchoicenumber][\currentchoicenumber]%
       \doif{#1}{*}{\savecounter[currentchoicenumber]}%
       %if new collect command work well, savecounter can be deleted
       \doif{#1}{*}{\collect{\convertnumber%
                   {\choiceparameter{numberconversion}}%
                   {\currentchoicenumber}}}%
    \else%
        \ifnum\currentchoicenumber<1\relax%
        \currentchoicenumber=1\relax%
        \else\relax\fi%
    \fi%
    \startitem
    \ifconditional\c_strc_itemgroups_horizontal% mode_horizontal
    \doifelse{#1}{*}{\correct_choice{#1}{#3}}{#3}%
    \else%
      \setcounter[currentchoicenumber][\currentchoicenumber]%
      \setcounter[totalchoicenumber][\currentchoicenumber]%
      \doifelse{#1}{*}{\correct_choice{#1}%
      {#3\savecounter[currentchoicenumber]}}%
      {#3}%if new collect command work well, savecounter can be deleted
      \doif{#1}{*}{\collect{\convertnumber%
                  {\choiceparameter{numberconversion}}%
                  {\currentchoicenumber}}}%
    \fi%
    \stopitem%
    \advance\currentchoicenumber by 1\relax%
    %% here #2 must be choice to get choice userid
    \dataset_collector[question][choice]%
}

\def\pitem{\dosingleempty\pitem_indeed}
\def\pitem_indeed[#1]#2{
  \startpitem[#1]{#2}\stoppitem
}
\def\citem{\dosingleempty\citem_indeed}
\def\citem_indeed[#1]#2{%
  \startcitem[#1]{#2}\stopcitem%
}

\bgroup
\obeylines
\gdef\xcitem{\bgroup\obeylines\dosingleempty\doxcitem}%
\gdef\doxcitem[#1]#2
  {\egroup%
  \doifsomethingelse{#1}%
  {\startcitem[#1]#2\stopcitem}%
  {}%
  \startcitem #2\stopcitem}%
\egroup

\let\fragilecitem\xcitem

\definedataset[Fillin_collector]
\definetextnote[textnote]
\setuptextnote[empty=\rootfillinparameter\c!empty,
         n=\rootfillinparameter\c!n]
\setupbar[fillin_text,\v!textnote:\v!underbar]
        [continue=\fillinparameter{continue},
        unit=\fillinparameter{unit},
        order=\fillinparameter{order},
        rulethickness=\fillinparameter{rulethickness},
        method=\fillinparameter{method},
        dy=\fillinparameter{dy},
        max=\fillinparameter{max},
        width=\fillinparameter{width},
        left=\fillinparameter{left},
        right=\fillinparameter{right},
        repeat=\fillinparameter{repeat},
        color=\fillinparameter{color},
        foregroundcolor=\fillinparameter{foregroundcolor},
        foregroundstyle=\fillinparameter{foregroundstyle},
        offset=\fillinparameter{offset},
        empty=\fillinparameter{empty},
        mp=\fillinparameter{mp}]
%rules:under:dots    %rules:under:random
%rules:under:dash    %rules:under:wave
\setupfillin[type=underbar, n=20,    empty=no,
       continue=yes, unit=em,  order=foreground,
             method=0,     color=,   width=4em,
             dy=-0.4,      max=3,    offset=-.1,
             left=,        right=,   repeat=,
             before=,     after=,
             rulethickness=.05,
             foregroundcolor=,
             foregroundstyle=\ss,
             mp=]
\def\showanswer_for_fillin{%
    \doifincsnameelse{question}{\currentitemgroup}%
                     {\doifelse{\questionparameter{showanswer}}{true}
                               {\mode_showanswertrue}
                               {\mode_showanswerfalse}}
                     {\relax}%
    \doifincsnameelse{problem}{\currentitemgroup}%
                     {\doifelse{\pitemparameter{showanswer}}{true}
                               {\mode_showanswertrue}
                               {\mode_showanswerfalse}}
                     {\relax}}
\def\fillin{\begingroup\dodoubleempty\dofillin}
\def\dofillin[#1][#2]{%
  \ifsecondargument\setupfillin[#1]\fi%
  \showanswer_for_fillin%
  \fillinparameter\c!before\fillinparameter\c!left%
  \doif{\fillinparameter\c!type}{}{\let\dofillin_temp\dofillin_indeed_text}%for default
  \doif{\fillinparameter\c!type}{underbar}{\let\dofillin_temp\dofillin_indeed_text}%type=underbar
  \doif{\fillinparameter\c!type}{textnote}{\let\dofillin_temp\dofillin_indeed_textnote}%
  \doif{\fillinparameter\c!type}{void}    {\let\dofillin_temp\dofillin_indeed_rule}%
  \ifsecondargument\setupfillin[#1]%
    \dofillin_temp[#1][#2]%
    \setdataset[Fillin_collector][\QusetionID][answer={#2}]%
  \else\dofillin_temp[][#1]%
      \setdataset[Fillin_collector][\QusetionID][answer={#1}]\fi%
  \ifmode_showanswer\setupfillin[empty=no]%
  \else\setupfillin[empty=yes]\fi%
  \fillinparameter\c!right\fillinparameter\c!after%
\endgroup}
\def\dofillin_temp[#1][#2]{#1#2}
\def\dofillin_indeed_text[#1][#2]{%#1 option #2 contents or answer
    \fillin_text{#2}%
}
\def\dofillin_indeed_textnote[#1][#2]{%#1 option #2 contents or answer
    \textnote[n=\fillinparameter\c!n]{#2}%
}
\def\dofillin_indeed_rule[#1][#2]{%#1 option #2 contents or answer
  \doifelse{\fillinparameter\c!empty}{yes}
  {\blackrule[color=white,
            width=\fillinparameter{width},
            alternativevariant=a,
           height=0pt,depth=.5pt]}{
    \blackrule[color=\fillinparameter{color},
            width=\fillinparameter{width},
            alternativevariant=a,
           height=0pt,depth=.5pt]}%
}

\setupmaterial [\c!align=center,\c!color=,\c!style=,
        \c!spacebefore=1em,\c!spaceafter=1em,
                \c!title=,
                \c!author=,
                \c!source=,
                \c!indicator=reset,
                indent={first,always,2em},]
\setupmaterial [\c!number] [\c!before={(},\c!after={)},
              \c!prefix=no,\c!start=\plusone,
                            \c!style=\namedmaterialparameter\c!title\c!style,
                            \c!color=\namedmaterialparameter\c!title\c!color,
                            \c!numberconversion=cn,\c!way=\v!by\v!section]
\setupmaterial [\c!title]  [\c!style=\ss\tfa,\c!color=,\c!align=center,
              \c!before=,]
\setupmaterial [\c!author] [\c!style=\tf,\c!color=,\c!align=flushright]
\setupmaterial [\c!source] [\c!before=\par,\c!align=flushright]
\def\material_counter_parameter#1%
  {\begingroup
    \def\currentmaterial{#1}%
    \setupalign[\namedmaterialparameter\c!title\c!align]
    \usematerialstyleandcolor\c!style\c!color
    \namedmaterialparameter\currentmaterial\c!before
    \incrementcounter[#1]
    \ifnum\rawcountervalue[#1]<1
    \incrementcounter[#1]
    \else\relax\fi
    \convertedcounter[#1]
    \namedmaterialparameter\currentmaterial\c!after
   \endgroup}

\def\material_parameter#1%creat new element in material
  {{\begingroup
    \def\currentmaterial{#1}%
    \setupalign[\namedmaterialparameter\currentmaterial\c!align]
    \usematerialstyleandcolor\c!style\c!color
    \namedmaterialparameter\currentmaterial\c!before
    \rootmaterialparameter\currentmaterial
    \namedmaterialparameter\currentmaterial\c!after
    \par\endgroup}}

\def\startmaterial{\begingroup\dosingleempty\startmaterial_indeed}
\def\startmaterial_indeed[#1]{%
    \let\currentmaterial\empty
    \edef\p_indicator{\rootmaterialparameter\c!indicator}
    \processaction[\p_indicator][
      reset=>\let\indicator_reset_helper\resetindicators,
    continue=>\let\indicator_reset_helper\relax,]
  \env_materialtrue\current_env_check%
  \iffirstargument\setupcurrentmaterial[#1]\fi
  \indicator_reset_helper
  \usematerialstyleandcolor\c!style\c!color%
    \blank[\rootmaterialparameter\c!spacebefore]
    \startalignment[\rootmaterialparameter\c!align]
        \material_counter_parameter\c!number
        \material_parameter\c!title
        \material_parameter\c!author
    \stopalignment
    \blank[\rootmaterialparameter\c!spaceafter]
    \setupindenting[\rootmaterialparameter{indent}]
}
\def\stopmaterial{%
    \material_parameter\c!source
    \indicator_reset_helper
    \endgroup}

\installnamespace          {close}
\installcommandhandler \????close     {close}     \????close
\setupclose[width=2em,frame=off,stopper=.,distance=.5em,after=\blank[halfline]]
\newcount\cnt_closetest\cnt_closetest=1\relax
\starttexdefinition unexpanded closebar #1
  \startbar[underbar]
%   \scratchdimen\widthofstring{#1}\relax
%   \zwj\kern.2\scratchdimen #1 \kern.2\scratchdimen\zwj
  \zwj\kern 1em #1 \kern 1em\zwj
  \stopbar
\stoptexdefinition
\def\docloseitem#1{\startcitem #1\stopcitem}
\def\close_order{%
  \noindent\unskip%
  \inframed[width=\closeparameter\c!width,frame=\closeparameter\c!frame]{%
    \convertnumber{n}{\cnt_closetest_temp}%
    \closeparameter\c!stopper%
    \show_point_or_answer[close][point]%
    \show_point_or_answer[close][answer]}%
  \hskip\closeparameter\c!distance\relax%
  \unskip%
}
\def\closechoice[#1]{%
  \closebar{\number\cnt_closetest}%
  \expandafter\gdef\csname close:\romannumerals\cnt_closetest\endcsname{#1}%
  \advance\cnt_closetest by 1\relax%
  }
\def\placeclosechoice{%
  \ifnum\cnt_closetest=1\relax%
  \color[red]{it seems that there is no "closechoice" be setted,please check it!}\fi%
  \newcount\cnt_closetest_temp\cnt_closetest_temp=1\relax%
  \def\closetest_list{\csname close:\romannumerals\cnt_closetest_temp\endcsname}%
  \useclosestyleandcolor\c!style\c!color%
  \dorecurse{\numexpr\cnt_closetest-1\relax}{%
    \hbox{\hsize=\textwidth%
      \hbox{\close_order}\hbox{%
      \vtop{%
        \startchoice%
          \processcommacommand[\closetest_list]\docloseitem%
        \stopchoice%
      }}}%
    \advance\cnt_closetest_temp by 1\relax}%
  \cnt_closetest=1\relax%
}
\def\startclose{\begingroup\dosingleempty\startclose_indeed}
\def\startclose_indeed[#1]{%
  \env_closetrue\current_env_check%
  \iffirstargument\setupclose[#1]\fi%
  \closeparameter\c!before%
}
\def\stopclose{%
  \closeparameter\c!after%
  \placeclosechoice\endgroup%
}

\setupindicator [style=\ss\bf,
                 before={ (~},
                  after={~) },
                  prefix=no,
               numberconversion=cn,%hiragana,
                  type=line,]

\def\indicator {\dosingleempty\doindicator}
\def\doindicator[#1]#2{\begingroup%
    \iffirstargument\setupindicator[#1]\fi%
    \edef\indicator_type{\indicatorparameter\c!type}%
    \edef\indicator_reset{\indicatorparameter\c!reset}%
    \processaction[\indicator_type]%
              [line=>\let\indicator_type\underbar,%
               none=>\let\indicator_type\relax]%
    \useindicatorstyleandcolor\c!style\c!color%
    \indicator_type{%
    \indicatorparameter\c!before%
    \incrementcounter[\currentindicator]%
    \convertedcounter[\currentindicator]%
    \indicatorparameter\c!after%
    #2}\endgroup}

\def\indicators{\convertedcounter[\currentindicator]
                \incrementcounter[\currentindicator]}
\def\resetindicators{\setcounter[\currentindicator][0]}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\installnamespace          {writingbox}
\installcommandhandler \????writingbox    {writingbox}    \????writingbox
\setupwritingbox[row=10,column=18,width=2em,height=2em,midheight=1em]
\newcount \tbl_row
\newcount \tbl_col
\def\makewritingbox{\dosingleempty\makewritingbox_indeed}
\def\makewritingbox_indeed[#1]{\begingroup%
    \tbl_row=\writingboxparameter{row} % yoko
    \tbl_col=\writingboxparameter{column} % tate
    \setupTABLE[split=yes]
    \setupTABLE[column][width=\writingboxparameter{width}]
    \setupTABLE[row][odd][height=\writingboxparameter{midheight}]
    \setupTABLE[row][even][height=\writingboxparameter{height}]
    \bTABLE
        \bTR \bTD[nc=\number\tbl_col] {} \eTD \eTR
        \dorecurse{\number\tbl_row}{
        \bTR
            \dorecurse{\number\tbl_col}{\bTD {} \eTD}
        \eTR
        \bTR \bTD[nc=\number\tbl_col] {} \eTD \eTR}
    \eTABLE
\endgroup}

\newcount\cnt_step_score
\def\score_calc#1{% only show number
  \newcount\cnt_step_score_temp%
  \global\cnt_step_score_temp=#1\relax%
  \ifnum\cnt_step_score=0\global\cnt_step_score=#1\relax\else%
  \global\cnt_step_score=\numexpr\cnt_step_score+\cnt_step_score_temp\relax%
  \fi\number\cnt_step_score%
}
\def\dotfill{\leavevmode%
  \xleaders\hbox to 0.25em{\hfil.\hfil}%
  \hfill\kern 0pt\relax}
\def\cdotfill{\leavevmode%
  \xleaders\hbox to 0.25em{\hfil$\cdot$\hfil}%
  \hfill\kern 0pt\relax}
\installnamespace                 {score}
\installcommandhandler \????score {score} \????score
\setupscore[style=\ssa,color=red,dotstyle=\ss,dotcolor=red,score=]
\def\score{\dosingleempty\score_indeed}
\def\score_indeed[#1]#2{\begingroup% format style
  \iffirstargument\setupscore[#1]\fi%
  \scoreparameter\c!before%
  \usescorestyleandcolor\c!style\c!color%
  \start\space\scoreparameter{dotstyle}%
  \switchtocolor[\scoreparameter{dotcolor}]%
  \doif{\scoreparameter\c!type}{}{\dotfill}%
  \doif{\scoreparameter\c!type}{space}{}%
  \doif{\scoreparameter\c!type}{hfill}{\unskip\hfill}%
  \doif{\scoreparameter\c!type}{dotfill}{\dotfill}%
  \doif{\scoreparameter\c!type}{cdotfill}{\cdotfill}%
  \space\stop\scoreparameter\c!left%
  \doif{\scoreparameter{score}}{}           {#2}%
  \doif{\scoreparameter{score}}{default}    {#2}%
  \doif{\scoreparameter{score}}{calculation}{\score_calc{#2}}%
  \doif{\scoreparameter{score}}{complex}    {#2 : \score_calc{#2}}%
  \scoreparameter\c!right\scoreparameter\c!after%
\endgroup}
\def\reset_score{%
  \cnt_step_score_temp=0\relax%
    \cnt_step_score=0\relax%
}
%score\score{3}\\
%score\score[type=space]{3}\\
%score\score[type=hfill]{3}\\
%score\score[type=dotfill]{30}\\
%\reset_score\\
%score\score[type=cdotfill]{30}\\
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\dorecurse{200}{
\expandafter\getrandomnumber \csname n_\romannumeral\recurselevel\endcsname  {1} {20}}

\dorecurse{200}{
\expandafter\getrandomnumber \csname nn_\romannumeral\recurselevel\endcsname {1} {20}}

\def\longtesttxt[#1]{%%1. \longtesttxt[\romannumeral 1]
  \ifcase\csname n_#1\endcsname%
    就像按 S 来响应错误一样。\or%0
    这个例子不太完整，因为页码没有存储在有用的地方。\or%1
    TeX 处理数学显示后，它将以下项目添加到当前垂直列表中： 惩罚、胶水、实际显示、胶水和惩罚。\or%2
    然而，它显示了一种增加或减少计数器的方法，并设置数字中的数字或相当于数字的罗马数字中的字母。\or%3
    基本问题是 “对 TeXbook 的页面引用应该如何出现在参考页面的描述区域中？” 这个例子显示了三种可能性。\or%4
    正如 TeX 不会随机连字符单词一样，它也不会在段落中的行之间随机打断数学表达式。\or%5
    TeX 仅考虑在关系（例如 = 或 < ）或二进制操作（例如 + 或 × ）之后进行中断。\or%6
    此命令提供对当前字体中所有字符的访问。号码应该在 0 -- 255 范围内。\or%7
    Junkjunk.tex文件不包含任何有用的东西，但这些行说明了一种读取辅助文件的方法。\or%8
    此命令将框寄存器中的列表副本添加到当前列表中。\or%9
    请注意，每个寄存器在创建后都会被初始化。\or%0
    此命令提供了一种直接指定分隔符的方法。\or%1
    数字应该是七个十六进制数字。\or%2
    它的前导数字必须在 0-7 范围内。该数字用作类号，其余六位数字用作 \type{\delcode} 值。\or%3
    Plain TeX 有二十多个定义，类似于：`\type{\def\rceil{\delimiter"5265307 }}'。\or%4
    这个定义意味着 \type{\rceil} 在家庭5（关闭），其小形式在家庭2位置"65，其大形式在家庭3位置"07"。\or%5
    \type{\Delimiter} 指定了一个数学符号，并以两种方式工作。\or%6
    当 TeX 寻找分隔符时（例如，在 \type{\left} 之后），它忽略了类数字，并使用剩余的六位数字作为 \type{\delcode}。\or%7
    但是，当分隔符在其他上下文中出现时，右三位数字被删除，其余四位数字成为符号的 \type{\mathcode}。\or%8
    对于 \type{\rceil}，这意味着 \type{\delcode} 是"265307，\type{\mathcode} 是"5265"。\or%9
    它首先计算子公式在轴上方和下延伸的距离。接下来，它使 y 等于刚刚计算的最大距离的两倍。\fi}

\def\shorttesttxt[#1]{%%1. \shorttesttxt[i]
  \ifcase\csname nn_#1\endcsname%
    悬挂压痕的数量\or%0
    段落中正线的宽度\or%1
    开始一个没有缩进的新段落\or%2
    告诉TeX尝试增加或减少段落中的行数\or%3
    扩展令牌，但在到达非空间令牌之前什么都不做\or%4
    只有当主垂直列表为空时，它才会结束当前工作\or%5
    该命令在内部垂直模式下是不允许的\or%6
    任意中断由三个字符序列组成\or%7
    另一个无效号码被传递了\or%8
    来自假部分的条件命令\or%9
    线路需要转移的金额\or%0
    用于指定显示样式\or%1
    关系后断线的惩罚\or%2
    此命令定义了宏\or%3
    家庭的脚本字体\or%4
    尺寸没有变化\or%5
    额外的空间\or%6
    左边的段落\or%7
    当前线宽\or%8
    文本样式\or%9
    序列\fi}

\def\choicenum[#1][#2][#3]{
  \ifnum\csname nn_#1\endcsname < 6
    \expandafter\startcitem[*]{\shorttesttxt[\romannumeral #2]}  \stopcitem
  \else
    \expandafter\startcitem{\shorttesttxt[\romannumeral #3]}  \stopcitem
  \fi
}

\newcount\LNUM\LNUM=1\relax
\newcount\CNUM\CNUM=1\relax
\newcount\DNUM\DNUM=1\relax
\newcount\ENUM\ENUM=2\relax

\def\example@choice#1{
    \setupquestion[showanswer=true,showpoint=true,point=2,answer=\getanswerfromchoice]
    \dorecurse{#1}{
      \startquestion
      \longtesttxt[\romannumeral\LNUM]\global\advance\LNUM by 1\relax
            \startchoice
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \global\advance\CNUM by 1\relax\global\advance\DNUM by 2\relax\global\advance\ENUM by 2\relax
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax\advance\DNUM by 1\relax\advance\ENUM by 2\relax
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax\advance\DNUM by 1\relax\advance\ENUM by 2\relax
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax\advance\DNUM by 1\relax\advance\ENUM by 2\relax
            \stopchoice
            \startanswer
            \input knuthmath
            \stopanswer
    \stopquestion}
}
\def\example@fillin#1{
    \setupquestion[showanswer=false,answer=,showpoint=true,point=\getpointfrompitem]
    \setuppitem[showanswer=true,showpoint=true,point=3,answer=\getanswerfromfillin]
    \startquestion
      \longtesttxt[\romannumeral\LNUM]
      \def\fillinanswer{\shorttesttxt[\romannumeral\CNUM]}
      \startproblem
      \dorecurse{#1}{
        \startpitem \longtesttxt[\romannumeral\CNUM] \fillin[][\fillinanswer]\stoppitem
        \startanswer
              \input knuthmath
            \stopanswer
        \global\advance\CNUM by 1\relax}
      \stopproblem
      \stopquestion
}
\def\example@pitem#1{
    \setupquestion[showpoint=true,showanswer=false,answer=,point=\getpointfrompitem]
    \setuppitem[showanswer=true,point=4,]
    \startquestion
      \longtesttxt[\romannumeral\LNUM]
      \def\fillinanswer{\shorttesttxt[\romannumeral\CNUM]}
      \startproblem
      \dorecurse{#1}{
        \startpitem[answer={answer : \recurselevel},]\longtesttxt[\romannumeral\CNUM]\stoppitem
        \startanswer
              \input knuthmath
            \stopanswer
        \global\advance\CNUM by 1\relax}
      \stopproblem
      \stopquestion
}
\def\example@material#1{
    \startmaterial
    \input knuthmath
    \stopmaterial
    \setupquestion[showanswer=true,showpoint=true,point=6,answer=\getanswerfromchoice]
    \dorecurse{#1}{
      \startquestion
      \longtesttxt[\romannumeral\LNUM]\global\advance\LNUM by 1\relax
            \startchoice
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \global\advance\CNUM by 1\relax%
            \global\advance\DNUM by 2\relax%
            \global\advance\ENUM by 2\relax%
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax%
            \advance\DNUM by 1\relax%
            \advance\ENUM by 2\relax%
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax%
            \advance\DNUM by 1\relax%
            \advance\ENUM by 2\relax%
            \choicenum[\romannumeral\CNUM][\the\DNUM][\the\ENUM]
            \advance\CNUM by 1\relax%
            \advance\DNUM by 1\relax%
            \advance\ENUM by 2\relax%
            \stopchoice
            \startanswer
              \input knuthmath
            \stopanswer
    \stopquestion}
}
\def\example@close#1{
    \startclose
    \def\closechoicex{\shorttesttxt[\romannumeral\DNUM]\global\advance\DNUM by 1\relax}
    \dorecurse{#1}{
        \dorecurse{3}{
          \longtesttxt[\romannumeral\CNUM]
        \global\advance\CNUM by 1\relax
        }\closechoice[\closechoicex,{[*]\closechoicex},\closechoicex]
      \longtesttxt[\romannumeral\CNUM]}
    \stopclose
}

%\dorecurse{30}{\typeanswerbychap{1}\par}
%\resetanswerid%
%\dorecurse{30}{\typeanswerbychap{2}\par}
%\resetanswerid
%\noindent\typeanswerlist[1][6]{30}
%\resetanswerid
%\noindent\typeanswerlist[2][6]{30}
%\type@answer@i[6*5,1,28]

\newcount\qid_in_chap\qid_in_chap=1\relax
\def\resetanswerid{\qid_in_chap=1\relax}
\def\typeanswerbychap{\dosingleempty\typeanswerbychap_indeed}
\def\typeanswerbychap_indeed[#1]#2{% #1 = chapter number，該命令會自行遞增計數器來獲取答案
  \iffirstargument\qid_in_chap=#1\relax\fi%
  \datasetvariable{Answer_collector}{#2-\the\qid_in_chap}{answer}%
  \advance\qid_in_chap by 1\relax}
\def\typeanswerdirect#1{% #1 = \qid，需要自行輸入來獲取某個題目的答案
  \datasetvariable{Answer_collector}{#1}{answer}}
\def\typeanswerlist{\dodoubleempty\typeanswerlist_indeed}
\def\typeanswerlist_indeed[#1][#2]#3{%#1 = chapter number
  \ifsecondargument\qid_in_chap=#2\fi% #2 = from which question to start
  \dorecurse{#3}{% answer amount
    \datasetvariable{Answer_collector}{#1-\the\qid_in_chap}{answer}%
  \advance\qid_in_chap by 1\relax}
}

\newcount\answer@seq@tempa\answer@seq@tempa=0\relax%
\newcount\answer@seq@tempb\answer@seq@tempb=0\relax%
\newcount\answer@seq@tempc
\def\type@answer@i[#1*#2,#3,#4]{% #1 for row #2 for column %
                                % #3 chapter number #4 last answer id%
  \answer@seq@tempc=\numexpr#4-1\relax%
    \bTABLE
      \dorecurse{#1}{\bTR
        \dorecurse{#2}{%
        \ifnum\answer@seq@tempa>\answer@seq@tempc \bTD\eTD\relax\else%
              \advance\answer@seq@tempa by 1\relax%
                \expanded{\bTD
                  \datasetvariable{Answer_collector}{#3-\the\answer@seq@tempa}{order}
      \eTD}\fi}
      \eTR\bTR
        \dorecurse{#2}{%
          \ifnum\answer@seq@tempb>\answer@seq@tempc \bTD\eTD\relax\else%
        \advance\answer@seq@tempb by 1\relax%
            \expanded{\bTD
            \datasetvariable{Answer_collector}{#3-\the\answer@seq@tempb}{answer}
        \eTD}\fi}
      \eTR}
    \eTABLE
}

\def\type@answer@ii{
\answer_seq=0\relax
\bTABLE
\dorecurse{4}{\bTR
  \dorecurse{5}{
        \advance\answer_seq by 1\relax%
            \expanded{\bTD\the\answer_seq\eTD}
      \expanded{\bTD
        \datasetvariable{Answer_collector}{\the\answer_seq}{answer}
    \eTD}}
\eTR}
\eTABLE}
%\type@answer@i{4}{5}{18}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% warning: conditional must put after env defination
% 因爲隱藏答案是通過 definebuffer 來實現的，
% 似乎無法將該環境作爲子環境放置在 buffer 環境中，
% 或者將該環境放置在 宏命令 之中。
% 目前重新定義了 answer 環境
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\definemode[teacher][keep]
\definemode[student][keep]
\definemode[check]  [keep]
\doif{\moduleparameter{basicexam}{mode}}{teacher}
     {\enablemode[teacher]}{}
\doif{\moduleparameter{basicexam}{mode}}{student}
     {\enablemode[student]}{}
\doif{\moduleparameter{basicexam}{mode}}{}
     {\enablemode[student]}{}
\startmode[teacher]
  \mode_showanswertrue
\stopmode
\startmode[student]
  \mode_showanswerfalse
\stopmode
%\ifmode_showanswer\relax\else%
%    \let\startanswer\relax
%    \let\stopanswer\relax
%    \definebuffer[answer]
%\fi%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%   EXAM MODULE   %%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\protect
\stopmodule
\endinput